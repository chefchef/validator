<?php

return [
    //Generic
    'Generic::isRequired'           => 'The :attribute field is required.',
    'Generic::isNotNull'            => 'The :attribute must be a non null value.',
    //Float
    'Float::__construct'            => 'The :attribute must be a float.',
    'Float::isNotZero'              => 'The :attribute may not be greater than :max.',
    'Float::isPositive'             => 'The :attribute may not be greater than :max.',
    'Float::isNegative'             => 'The :attribute must be less than :max.',
    'Float::isBetween'              => 'The :attribute must be between :min and :max.',
    'Float::isOdd'                  => 'The :attribute must be divisible by :size.',
    'Float::isEven'                 => 'The :attribute must be divisible by :size.',
    'Float::isMultiple'             => 'The :attribute must be multiple of :size.',
    //Integer
    'Integer::__construct'          => 'The :attribute must be an integer.',
    'Integer::isNotZero'            => 'The :attribute may not be greater than :max.',
    'Integer::isPositive'           => 'The :attribute may not be greater than :max.',
    'Integer::isNegative'           => 'The :attribute must be less than :max.',
    'Integer::isBetween'            => 'The :attribute must be between :min and :max.',
    'Integer::isOdd'                => 'The :attribute must be divisible by :size.',
    'Integer::isEven'               => 'The :attribute must be divisible by :size.',
    'Integer::isMultiple'           => 'The :attribute must be multiple of :size.',
    //String
    'String::__construct'           => 'The :attribute must be a string.',
    'String::isAlphanumeric'        => 'The :attribute may only contain letters and numbers.',
    'String::isAlpha'               => 'The :attribute may only contain letters.',
    'String::isBetween'             => 'The :attribute must be between :min and :max characters.',
    'String::isCharset'             => '',
    'String::isAllConsonants'       => '',
    'String::contains'              => 'The :attribute was not found.',
    'String::isControlCharacters'   => '',
    'String::isDigit'               => 'The :attribute must be :digits digits.',
    'String::endsWith'              => '',
    'String::equals'                => '',
    'String::in'                    => 'The selected :attribute is invalid.',
    'String::hasGraphicalCharsOnly' => '',
    'String::hasLength'             => 'The :attribute must be :size characters.',
    'String::isLowercase'           => '',
    'String::notEmpty'              => '',
    'String::noWhitespace'          => '',
    'String::hasPrintableCharsOnly' => '',
    'String::isPunctuation'         => '',
    'String::matchesRegex'          => 'The :attribute format is invalid.',
    'String::isSlug'                => '',
    'String::isSpace'               => '',
    'String::startsWith'            => '',
    'String::isUppercase'           => '',
    'String::isVersion'             => '',
    'String::isVowel'               => '',
    'String::isHexDigit'            => '',
    'String::hasLowercase'          => '',
    'String::hasUppercase'          => '',
    'String::hasNumeric'            => '',
    'String::hasSpecialCharacters'  => '',
    'String::isEmail'               => 'The :attribute must be a valid email address.',
    //Object
    'Object::__construct'           => 'The :attribute is not a valid object.',
    'Object::isInstanceOf'          => '',
    'Object::hasProperty'           => '',
    'Object::hasMethod'             => '',
    'Object::hasParentClass'        => '',
    'Object::isChildOf'             => '',
    'Object::inheritsFrom'          => '',
    'Object::hasInterface'          => '',
    //DateTime
    'DateTime::__construct'         => 'The :attribute is not a valid date.',
    'DateTime::isAfter'             => 'The :attribute must be a date after :date.',
    'DateTime::isBefore'            => 'The :attribute must be a date before :date.',
    'DateTime::isBetween'           => '',
    'DateTime::isWeekend'           => '',
    'DateTime::isWeekday'           => '',
    'DateTime::isMonday'            => 'The :attribute date is not Monday.',
    'DateTime::isTuesday'           => 'The :attribute date is not Tuesday.',
    'DateTime::isWednesday'         => 'The :attribute date is not Wednesday.',
    'DateTime::isThursday'          => 'The :attribute date is not Thursday.',
    'DateTime::isFriday'            => 'The :attribute date is not Friday.',
    'DateTime::isSaturday'          => 'The :attribute date is not Saturday.',
    'DateTime::isSunday'            => 'The :attribute date is not Sunday.',
    'DateTime::isToday'             => 'The :attribute date is not today.',
    'DateTime::isYesterday'         => 'The :attribute date is not yesterday.',
    'DateTime::isTomorrow'          => 'The :attribute date is not tomorrow.',
    'DateTime::isLeapYear'          => 'The :attribute must be a valid leap year.',
    //Collection
    'Collection::__construct'       => '',
    'Collection::each'              => '',
    'Collection::hasKeyFormat'      => '',
    'Collection::endsWith'          => '',
    'Collection::contains'          => 'The :attribute was not found.',
    'Collection::hasKey'            => '',
    'Collection::length'            => '',
    'Collection::isNotEmpty'        => '',
    'Collection::startsWith'        => '',
];
